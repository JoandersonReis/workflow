// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum CompanyCategory {
  FOOD
  TECNOLOGY
  ADVOCACY
  MEDICINE
  SECURITY
  OTHER
}

enum ScheduleDay {
  SUN
  MON
  TUE
  WED
  THU
  FRI
  SAT
}

enum CompanyPlan {
  INITIAL
  PREMIUM
}

model Admin {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())

  @@map("admins")
}

model Company {
  id                 String          @id @default(uuid())
  email              String          @unique
  password           String
  name               String
  createdAt          DateTime        @default(now())
  cnpj               String          @unique
  logo               String?
  category           CompanyCategory
  location_longitude String?
  location_latitude  String?

  plan CompanyPlan @default(INITIAL)

  @@map("companies")
}

model Worker {
  id             String           @id @default(uuid())
  email          String           @unique
  password       String
  name           String
  createdAt      DateTime         @default(now())
  cpf            String           @unique
  job            String
  WorkerSchedule WorkerSchedule[]

  @@map("workers")
}

model Schedule {
  id             String           @id @default(uuid())
  day            ScheduleDay
  work_start     DateTime
  work_end       DateTime
  free_time      Int // Minutes
  WorkerSchedule WorkerSchedule[]
}

model WorkerSchedule {
  id        String @id @default(uuid())
  worker    Worker @relation(fields: [worker_id], references: [id])
  worker_id String

  schedule    Schedule @relation(fields: [schedule_id], references: [id])
  schedule_id String
}

model Point {
  id                 String    @id @default(uuid())
  createdAt          DateTime  @default(now())
  start              DateTime?
  end                DateTime?
  location_latitude  String
  location_longitude String

  @@map("points")
}
